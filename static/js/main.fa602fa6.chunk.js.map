{"version":3,"sources":["components/Song.js","App.js","index.js"],"names":["Song","props","name","leader","songKey","urlFull","url","className","href","App","useState","songs","setSongs","useEffect","fetch","then","response","json","newSongs","Songs","map","song","lead","key","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAmBeA,EAZF,SAACC,GAAU,IAEZC,EAA+BD,EAA/BC,KAAMC,EAAyBF,EAAzBE,OAAQC,EAAiBH,EAAjBG,QAChBC,EAAU,+BADuBJ,EAARK,IAE/B,OACI,sBAAKC,UAAU,OAAf,UACI,6BAAKL,IACL,uCAAUC,EAAV,YAA2BC,EAA3B,OAAuC,mBAAGI,KAAMH,EAAT,2BC6BpCI,G,MAtCH,WAAO,IAAD,EAEUC,mBAAS,IAFnB,mBAETC,EAFS,KAEFC,EAFE,KAehB,OAXAC,qBAAU,WACRC,MAAM,8DACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAE,GACJ,IAAMC,EAAWD,EAAKE,MAEtBP,EAASM,QAEZ,IAMD,sBAAKX,UAAU,MAAf,UAEE,sBAAKA,UAAU,UAAf,UACE,8CACA,sHAGF,qBAAKA,UAAU,aAAf,SACGI,EAAMS,KAAI,SAAAC,GACT,OACE,cAAC,EAAD,CAAoBnB,KAAMmB,EAAKnB,KAAMC,OAAQkB,EAAKC,KAAMlB,QAASiB,EAAKE,IAAKjB,IAAKe,EAAKf,KAA1Ee,EAAKG,cC5B5BC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.fa602fa6.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n// this is a component to hold the info for each song\r\n// props = id, name, leader, key, url, last_date_sung\r\n// url is just end of url. must add \"projectym.net/songs/\"\r\n// using spread operator to access props directly\r\n\r\nconst Song = (props) => {\r\n    //console.log(props);\r\n    const { name, leader, songKey, url } = props;\r\n    const urlFull = \"https://projectym.net/songs/\" + url\r\n    return (\r\n        <div className='card'>\r\n            <h5>{name}</h5>\r\n            <p>Lead: {leader}  | Key: {songKey} |  <a href={urlFull}>Lyrics</a></p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Song\r\n","import React, { useState, useEffect } from 'react'\nimport Song from './components/Song'\nimport './App.css';\n\n\nconst App = () => {\n\n  const [songs, setSongs] = useState([]);\n\n  useEffect(() => {\n    fetch('https://my-json-server.typicode.com/projectym/Songs-Api/db')\n      .then(response => response.json())\n      .then(json => {\n        const newSongs = json.Songs;\n        //console.log(newSongs);\n        setSongs(newSongs);\n      })\n  }, []);\n\n\n  return (\n\n\n    <div className=\"App\">\n\n      <div className=\"top-div\">\n        <h1>Search Songs</h1>\n        <p>A react app to search through songs using redux and custom api deployed by GitHub.</p>\n      </div>\n\n      <div className=\"bottom-div\">\n        {songs.map(song => {\n          return (\n            <Song key={song.id} name={song.name} leader={song.lead} songKey={song.key} url={song.url} />\n          )\n        })}\n      </div>\n\n    </div>\n  );\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}