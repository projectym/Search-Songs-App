{"version":3,"sources":["components/layout/Navbar.js","components/Filter.js","components/Sort.js","components/layout/Settings.js","components/Search.js","components/layout/TopDiv.js","components/Song.js","components/layout/BottomDiv.js","App.js","hooks/useFetch.js","index.js"],"names":["Navbar","useContext","appContext","isMobile","menuOpen","setMenuOpen","isDark","setIsDark","closeMenu","handleChange","e","target","checked","useEffect","linkNames","links","className","onClick","map","name","index","href","type","onChange","Filter","loading","keys","setFilterKey","setFilterLead","id","value","keyResults","key","htmlFor","lead","Sort","props","handleClick","setSortBy","setAscDesc","defaultChecked","Settings","showSettings","setShowSettings","hidden","Search","useState","search","setSearch","setSearchVal","placeholder","TopDiv","style","padding","Song","song","url","last_date_sung","urlFull","date","Date","toDateString","slice","BottomDiv","sortResults","ascDesc","sortBy","songResults","length","React","createContext","App","requestMade","setRequestMade","setLoading","songs","setSongs","setKeys","a","fetch","response","json","data","Songs","Keys","console","log","getSongs","useFetch","setSongResults","filterKey","filterLead","searchVal","setIsMobile","checkSize","width","window","innerWidth","filteredSongs","filter","includes","searchArr","toUpperCase","split","indexOf","splice","i","addEventListener","removeEventListener","Provider","sortSongsBy","sort","song1","song2","value1","value2","var1","var2","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.31891e8f.chunk.js","sourcesContent":["import React, { useContext, useEffect } from 'react'\r\nimport { appContext } from '../../App'\r\n\r\nconst Navbar = () => {\r\n    const { isMobile, menuOpen, setMenuOpen, isDark, setIsDark } = useContext(appContext);\r\n\r\n    const hamburgerClick = () => {\r\n        if (!menuOpen) {\r\n            setMenuOpen(true);\r\n        }\r\n        else {\r\n            setMenuOpen(false)\r\n        }\r\n    }\r\n\r\n    const closeMenu = () => {\r\n        if (menuOpen) {\r\n            setMenuOpen(false);\r\n        }\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        setIsDark(e.target.checked);\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        return () => {\r\n            setMenuOpen(false);\r\n        }\r\n    }, [isMobile, setMenuOpen])\r\n\r\n    const linkNames = [\"GitHub Code\", \"JSON Data\"];\r\n    const links = [\"https://github.com/projectym/Search-Songs-App\", \"https://raw.githubusercontent.com/projectym/Songs-Api/main/db.json\"]\r\n\r\n    if (isMobile) {\r\n        return (\r\n            <>\r\n                <div className=\"my-navbar\">\r\n                    <h4 className=\"icon\">pjT</h4>\r\n                    <div className=\"hamburger-div\" onClick={hamburgerClick}>\r\n                        <div></div>\r\n                        <div></div>\r\n                        <div></div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={menuOpen ? \"mobile-side-container menu-open\" : \"mobile-side-container\"} >\r\n                    <div className=\"mobile-side-div\">\r\n\r\n                        <ul className=\"links\">\r\n                            {linkNames.map((name, index) => {\r\n                                return (\r\n                                    <li key={name}><a href={links[index]}>{name}</a></li>\r\n                                )\r\n                            })}\r\n\r\n                            <li key=\"switch\">\r\n                                <div className=\"switch\">\r\n                                    <label>Dark Mode\r\n                                        <input type=\"checkbox\" checked={isDark} onChange={handleChange} />\r\n                                        <span className=\"lever\"></span>\r\n                                    </label>\r\n                                </div>\r\n                            </li>\r\n\r\n                        </ul>\r\n\r\n                        <button className=\"close-button\" onClick={closeMenu}>Close</button>\r\n                    </div>\r\n\r\n                    <div className={menuOpen ? \"close-div-open\" : \"close-div\"} onClick={closeMenu}></div>\r\n                </div>\r\n\r\n            </>\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"my-navbar\">\r\n            <h4 className=\"icon\">pjT</h4>\r\n            <ul className=\"links\">\r\n                {linkNames.map((name, index) => {\r\n                    return (\r\n                        <li key={name}><a href={links[index]}>{name}</a></li>\r\n                    )\r\n                })}\r\n\r\n                <li key=\"switch\">\r\n                    <div className=\"switch\">\r\n                        <label>\r\n                            <input type=\"checkbox\" checked={isDark} onChange={handleChange} />\r\n                            <span className=\"lever\"></span>\r\n                        Dark</label>\r\n                    </div>\r\n                </li>\r\n\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React, { useContext } from 'react'\r\nimport { appContext } from '../App'\r\n\r\n\r\nconst Filter = () => {\r\n\r\n    const { loading, keys, setFilterKey, setFilterLead } = useContext(appContext);\r\n\r\n    const leaders = [\"Keith\", \"Sis. Jackie\", \"Sis. Jones\", \"Tymbree\"]\r\n\r\n    const handleChange = (e) => {\r\n        switch (e.target.id) {\r\n            case \"keys\":\r\n                setFilterKey(e.target.value);\r\n                break;\r\n\r\n            case \"leads\":\r\n                setFilterLead(e.target.value);\r\n                break;\r\n            default:\r\n        }\r\n\r\n    }\r\n\r\n    const keyResults = loading ? [] : (\r\n        keys.map((key) => {\r\n            return (<option value={key} key={key}>{key}</option>)\r\n        })\r\n    )\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h4 className=\"center\">Filter by</h4>\r\n            <label htmlFor=\"keys\">Key:</label>\r\n            <select className='browser-default' name=\"keys\" id=\"keys\" onChange={handleChange}>\r\n                <option value=''>All</option>\r\n                {keyResults}\r\n            </select>\r\n\r\n            <label htmlFor=\"leads\">Leaders:</label>\r\n            <select className='browser-default' name=\"leads\" id=\"leads\" onChange={handleChange}>\r\n                <option value=''>All</option>\r\n                {\r\n                    leaders.map((lead) => {\r\n                        return (\r\n                            <option value={lead} key={lead}>{lead}</option>\r\n                        )\r\n                    })\r\n                }\r\n\r\n            </select>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter\r\n","import React from 'react'\r\n\r\nconst Sort = (props) => {\r\n\r\n    const handleClick = (e) => {\r\n\r\n        if (e.target.name === 'sortBy') {\r\n\r\n            props.setSortBy(e.target.value)\r\n        }\r\n\r\n        if (e.target.name === 'ascDesc') {\r\n            props.setAscDesc(e.target.value)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h4 className=\"center\">Sort by</h4>\r\n            <div className=\"flex-row asc-desc\">\r\n                <div className=\"radio-button width-30\">\r\n                    <label htmlFor=\"title\">Asc</label>\r\n                    <input type=\"radio\" id=\"asc\" name=\"ascDesc\" value=\"asc\" onClick={handleClick} defaultChecked />\r\n                </div>\r\n\r\n                <div className=\"radio-button width-30\">\r\n                    <label htmlFor=\"title\">Desc</label>\r\n                    <input type=\"radio\" id=\"desc\" name=\"ascDesc\" value=\"desc\" onClick={handleClick} />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"radio-button\">\r\n                <label htmlFor=\"title\">Title</label>\r\n                <input type=\"radio\" id=\"title\" name=\"sortBy\" value=\"name\" onClick={handleClick} defaultChecked />\r\n            </div>\r\n\r\n            <div className=\"radio-button\">\r\n                <label htmlFor=\"date\">Last Sung</label>\r\n                <input type=\"radio\" id=\"date\" name=\"sortBy\" value=\"date\" onClick={handleClick} />\r\n            </div>\r\n\r\n            <div className=\"radio-button\">\r\n                <label htmlFor=\"key\">Key</label>\r\n                <input type=\"radio\" id=\"key\" name=\"sortBy\" value=\"key\" onClick={handleClick} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sort\r\n","import React, { useContext } from 'react'\r\nimport { appContext } from '../../App'\r\n\r\n//import components\r\nimport Filter from '../../components/Filter'\r\nimport Sort from '../../components/Sort'\r\n\r\nconst Settings = () => {\r\n\r\n    const { isMobile, showSettings, setSortBy, setAscDesc, setShowSettings } = useContext(appContext);\r\n\r\n\r\n    return (\r\n        <div className={isMobile ? \"settings-container-mobile\" : \"settings-container\"} hidden={!showSettings}>\r\n            <div className=\"settings-div\">\r\n                <Filter />\r\n                <Sort setSortBy={setSortBy} setAscDesc={setAscDesc} />\r\n                <button onClick={() => setShowSettings(false)} hidden={!isMobile}>Close</button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nconst Search = (props) => {\r\n\r\n    const [search, setSearch] = useState('');\r\n\r\n    useEffect(() => {\r\n        props.setSearchVal(search);\r\n    }, [props, search])\r\n\r\n\r\n    return (\r\n        <div className=\"search-component\">\r\n            <div className='search-bar'>\r\n                <input className='browser-default' type=\"text\" name='search' placeholder=\"Search\"\r\n                    value={search} onChange={(e) => { setSearch(e.target.value) }} />\r\n            </div>\r\n            <button className='clear-search' onClick={() => setSearch('')}>Clear</button>\r\n\r\n            <button className='settings-button' onClick={() => props.setShowSettings(!props.showSettings)} hidden={!props.isMobile}>Settings</button>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import React, { useContext } from 'react'\r\nimport { appContext } from '../../App'\r\nimport Search from '../../components/Search'\r\n\r\n\r\nconst TopDiv = () => {\r\n\r\n    const { setSearchVal, isMobile, showSettings, setShowSettings } = useContext(appContext);\r\n\r\n\r\n    return (\r\n        <div className=\"top-div\">\r\n            <h2>Search Songs</h2>\r\n            <p style={{ padding: \"0 10px\" }} >A React app made to search through, filter, and sort a list of songs. Deployed with GitHub.</p>\r\n            <Search setSearchVal={setSearchVal} showSettings={showSettings} setShowSettings={setShowSettings} isMobile={isMobile} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TopDiv\r\n","import React from 'react'\r\n\r\n// this is a component to hold the info for each song\r\n// props = id, name, leader, key, url, last_date_sung\r\n// url is just end of url. must add \"projectym.net/songs/\"\r\n// using spread operator to access props directly\r\n\r\nconst Song = (props) => {\r\n    //console.log(props);\r\n    const { name, lead, key, url, last_date_sung } = props.song;\r\n    const urlFull = \"https://projectym.net/songs/\" + url\r\n    const date = last_date_sung ? new Date(last_date_sung + 'T12:00:00Z').toDateString().slice(3) : '';\r\n    return (\r\n        <div className='song-card'>\r\n            <h5>{name}</h5>\r\n            <p>Last Sung: {date}</p>\r\n            <p>{lead ? `Lead: ${lead} | ` : \"\"} Key: {key} |  <a href={urlFull}>Lyrics</a></p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Song\r\n","import React, { useContext } from 'react'\r\nimport { appContext } from '../../App'\r\n\r\nimport Song from '../Song'\r\n\r\n\r\n\r\nconst BottomDiv = () => {\r\n\r\n    const { loading, sortResults, ascDesc, sortBy, songResults } = useContext(appContext);\r\n\r\n    if (loading) {\r\n        return (\r\n            <div className=\"bottom-div\">\r\n                <h4>Loading...</h4>\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"bottom-div\">\r\n            {sortResults('name', ascDesc)}\r\n            {sortBy === 'name' ? null : sortResults(sortBy, ascDesc)}\r\n            {songResults.length ? (songResults.map(song => {\r\n                return (<Song song={song} key={song.id} />)\r\n            })) : <h3 className='center'>No Results :(</h3>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BottomDiv\r\n","import React, { useState, useEffect } from 'react'\nimport './App.css';\n\n//import Custom Hook to fetch Song Data\nimport { useFetch } from './hooks/useFetch'\n\n// Importing Components\nimport Navbar from './components/layout/Navbar'\nimport Settings from './components/layout/Settings'\nimport TopDiv from './components/layout/TopDiv'\nimport BottomDiv from './components/layout/BottomDiv'\n\nexport const appContext = React.createContext();\n\nconst App = () => {\n\n  const { loading, songs, keys } = useFetch();\n\n  const [songResults, setSongResults] = useState([]);\n\n  const [filterKey, setFilterKey] = useState('');\n  const [filterLead, setFilterLead] = useState('');\n  const [sortBy, setSortBy] = useState('name');\n  const [ascDesc, setAscDesc] = useState('asc')\n  const [searchVal, setSearchVal] = useState('');\n  const [isMobile, setIsMobile] = useState(false);\n  const [showSettings, setShowSettings] = useState(true);\n  const [isDark, setIsDark] = useState(false);\n  const [menuOpen, setMenuOpen] = useState(false);\n\n\n  const sortResults = (sortSongsBy, ascDesc) => {\n\n    // Find what to sort by\n    // set string to uppercase\n    // compare strings and return value\n    if (songResults) {\n      songResults.sort((song1, song2) => {\n\n        let value1 = 1\n        let value2 = -1\n\n        if (ascDesc === 'desc') {\n          value1 = -1;\n          value2 = 1\n        }\n\n\n        let var1 = '';\n        let var2 = '';\n\n        if (sortSongsBy === 'key') {\n          var1 = song1.key.toUpperCase();\n          var2 = song2.key.toUpperCase();\n        } else if (sortSongsBy === 'date') {\n          var1 = song1.last_date_sung.toUpperCase();\n          var2 = song2.last_date_sung.toUpperCase();\n        } else {\n          var1 = song1.name.toUpperCase();\n          var2 = song2.name.toUpperCase();\n        }\n\n        if (var1 < var2) {\n          return value2\n        }\n        if (var1 > var2) {\n          return value1\n        }\n\n        return 0\n      })\n    }\n  }\n\n  const checkSize = () => {\n    const width = window.innerWidth\n    if (width > 1000 && isMobile) {\n      setIsMobile(false);\n      setShowSettings(true);\n    }\n    else if (width <= 1000 && !isMobile) {\n      setIsMobile(true);\n      setShowSettings(false);\n    }\n  }\n\n\n  useEffect(() => {\n    if (!loading) {\n      // console.log(\"Songs/Loading\")\n      setSongResults(songs);\n    }\n\n  }, [songs, loading]);\n\n\n  // useEffect for updating songResults.\n  // only woorks if is not loading.\n  useEffect(() => {\n    if (!loading) {\n      let filteredSongs = songs.filter((song) => {\n        if (filterKey !== '' && filterLead !== '') {\n          return song.key === filterKey && song.lead.includes(filterLead)\n        }\n        else if (filterKey !== '') {\n          return song.key === filterKey\n        }\n        else if (filterLead !== '') {\n          return song.lead.includes(filterLead)\n        }\n        return true\n      });\n\n      if (searchVal !== '') {\n\n        const searchArr = searchVal.toUpperCase().split(' ');\n        const index = searchArr.indexOf('');\n\n        if (index > -1) {\n          searchArr.splice(index, 1);\n        }\n\n        for (let i = 0; i < searchArr.length; i++) {\n\n          if (filteredSongs.length > 0) {\n            filteredSongs = filteredSongs.filter(song => {\n\n              const { name, lead, key } = song;\n\n              if (name.toUpperCase().includes(searchArr[i])) {\n                return true\n              }\n              else if (lead.toUpperCase().includes(searchArr[i])) {\n                return true\n              }\n              else if (key.toUpperCase().includes(searchArr[i])) {\n                return true\n              }\n              return false;\n            })\n          }\n        }\n      }\n\n      setSongResults(filteredSongs);\n    }\n  }, [loading, filterKey, filterLead, songs, searchVal])\n\n  //  useEffect for checking size and updating isMobile\n\n  useEffect(() => {\n    checkSize()\n    window.addEventListener('resize', checkSize)\n    return () => {\n      window.removeEventListener('resize', checkSize)\n    }\n  })\n\n  return (\n    <appContext.Provider value={{ loading, isMobile, showSettings, keys, setFilterKey, setFilterLead, setSortBy, setAscDesc, setShowSettings, sortBy, ascDesc, setSearchVal, sortResults, songResults, menuOpen, setMenuOpen, isDark, setIsDark }} >\n\n      <div className={isDark ? (menuOpen ? \"App-dark fixed\" : \"App-dark\") : (menuOpen ? \"App fixed\" : \"App\")}>\n        <Navbar />\n\n        <div className=\"app-content\">\n\n          <Settings />\n\n          <div className={isMobile ? \"main-div-mobile\" : \"main-div\"}>\n\n            <TopDiv />\n            <BottomDiv />\n\n          </div>\n        </div>\n\n      </div>\n\n    </appContext.Provider>\n  );\n}\n\n\nexport default App;\n","import { useState } from 'react'\r\n\r\n\r\nexport const useFetch = () => {\r\n\r\n    const [requestMade, setRequestMade] = useState(false)\r\n    const [loading, setLoading] = useState(true);\r\n    const [songs, setSongs] = useState([]);\r\n    const [keys, setKeys] = useState([]);\r\n\r\n    const getSongs = async () => {\r\n\r\n        setRequestMade(true)\r\n        //console.log(\"trying to recieve data\")\r\n\r\n        try {\r\n            //console.log('fetchnig...')\r\n            const response = await fetch('https://raw.githubusercontent.com/projectym/Songs-Api/main/db.json')\r\n            const data = await response.json()\r\n\r\n            // console.log(data);\r\n            setSongs(data.Songs);\r\n            setKeys(data.Keys);\r\n            setLoading(false);\r\n\r\n        }\r\n        catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    if (!requestMade) {\r\n        getSongs()\r\n    }\r\n\r\n    return { loading, songs, keys }\r\n\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './antiMaterialize.css'\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}